{"version":3,"sources":["Components/ErrorIndicator/death-star-explosion.jpg","Components/Header/Header.js","Services/swapi-service.js","Components/ItemList/ItemList.js","Components/Spinner/Spinner.js","Components/ErrorIndicator/ErrorIndicator.js","Components/PersonDetails/PersonDetails.js","Components/RandomPlanet/RandomPlanet.js","Components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","Component","SwapiService","_apiBase","_transformPlanet","planet","id","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","url","fetch","concat","this","res","ok","Error","status","json","getResource","results","map","_this","_this2","ss","_this3","ItemList","swapiService","state","peopleList","getAllPeople","then","setState","onItemSelected","props","_ref","key","onClick","Spinner","ErrorIndicator","src","icon","alt","role","aria-label","PersonDetails","loading","error","onError","err","console","updatePerson","prevProps","personId","getPerson","catch","_this$state","isError","Components_ErrorIndicator_ErrorIndicator","isLoading","Components_Spinner_Spinner","personData","PersonDetails_PersonView","PersonView","Fragment","width","height","RandomPlanet","onPlanetLoaded","updatePlanet","Math","floor","random","getPlanet","interval","setInterval","clearInterval","hasData","spinner","errorMsg","content","RandomPlanet_PlanetView","PlanetView","App","selectedPerson","onPersonSelected","Components_Header_Header","Components_RandomPlanet_RandomPlanet","Components_ItemList_ItemList","Components_PersonDetails_PersonDetails","ReactDOM","render","Components_App_App","document","querySelector"],"mappings":"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","file":"static/js/main.5ff883c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death-star-explosion.e7f99c73.jpg\";","import React, { Component } from 'react';\n\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header d-flex align-items-center\">\n        <h1 className=\"header-title\">\n          <a href=\"#home\" className=\"header-link\">\n            StarDB\n          </a>\n        </h1>\n\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#people\">People</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#planets\">Planets</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#starships\">Starships</a>\n          </li>\n        </ul>\n      </header>\n    );\n  }\n}\n\nexport default Header;","export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, received ${res.status}`)\n    }\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResource(`/people/`);\n    return res.results.map((person, id) => this._transformPerson(person, id + 1));\n  }\n\n  async getPerson(id) {\n    const person = await this.getResource(`/people/${id}`);\n    return this._transformPerson(person, id);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map((planet, id) => this._transformPlanet(planet, id + 1));\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}`);\n    return this._transformPlanet(planet, id);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map((ss, id) => this._transformStarship(ss, id + 1));\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResource(`/starships/${id}`);\n    return this._transformStarship(starship, id);\n  }\n\n  // _extractId(item) {\n  //   const idRegExp = /\\/([0-9]*)\\/$/;\n  //   return item.url.match(idRegExp)[1];\n  // }\n\n  _transformPlanet = (planet, id) => {\n    return {\n      id,\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    }\n  }\n\n  _transformStarship = (starship, id) => {\n    return {\n      id,\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    }\n  }\n\n  _transformPerson = (person, id) => {\n    return {\n      id,\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport SwapiService from '../../Services/swapi-service';\n\nimport './ItemList.css';\n\nclass ItemList extends Component {\n  swapiService = new SwapiService();\n\n  state = {\n    peopleList: []\n  };\n\n  componentDidMount() {\n    this.swapiService\n      .getAllPeople()\n      .then((peopleList) => {\n        this.setState({ peopleList });\n      });\n  }\n\n  render() {\n    const { peopleList } = this.state;\n    const { onItemSelected } = this.props;\n\n    return (\n      <ul className=\"item-list list-group\">\n        {peopleList.map(({ id, name }) => {\n          return (\n            <li\n              key={id}\n              className=\"list-group-item list-group-item-action\"\n              onClick={() => onItemSelected(id)}>\n              {name}\n            </li>\n          )\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css ng-scope\">\n      <div className=\"lds-double-ring\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\nexport default Spinner;","import React from 'react';\n\nimport './ErrorIndicator.css';\nimport icon from './death-star-explosion.jpg';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n      <img className=\"error-icon\" src={icon} alt=\"error icon\" />\n      <p className=\"error-title\">BOOM!</p>\n      <p className=\"error-message\">\n        Something has gone terribly \\/\\/r0nG\n        <span role=\"img\" aria-label=\"sad\">😱</span>\n      </p>\n      <p>\n        but we already sent droids to fix it\n        <span role=\"img\" aria-label=\"droid\">🤖</span>\n      </p>\n    </div>\n  );\n}\n\nexport default ErrorIndicator;","import React, { Component } from 'react';\n\nimport SwapiService from '../../Services/swapi-service';\n\nimport './PersonDetails.css';\nimport Spinner from '../Spinner/Spinner';\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\n\nclass PersonDetails extends Component {\n  swapiService = new SwapiService();\n\n  state = {\n    person: null,\n    loading: false,\n    error: false\n  };\n\n  componentDidMount() {\n    this.updatePerson();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.personId !== this.props.personId) {\n      this.updatePerson();\n    }\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n    console.error(err);\n  }\n\n  updatePerson() {\n    const { personId } = this.props;\n    if (!personId) return;\n    this.setState({\n      loading: true,\n      error: false\n    });\n    this.swapiService\n      .getPerson(personId)\n      .then((person) => {\n        this.setState({\n          person,\n          loading: false\n        });\n      }).catch(this.onError);\n  }\n\n  render() {\n    const { person, loading, error } = this.state;\n    if (!(person || error)) {\n      return (\n        <div className=\"details card\">\n          <span>Select a person from a list</span>\n        </div>\n      )\n    }\n    const isError = error ? <ErrorIndicator /> : null;\n    const isLoading = loading ? <Spinner /> : null;\n    const hasData = !(error || loading);\n    const personData = hasData ? <PersonView {...person} /> : null;\n\n    return (\n      <div className=\"details card\">\n        {isError}\n        {isLoading}\n        {personData}\n      </div>\n    );\n  }\n}\n\nconst PersonView = ({ id, name, gender, birthYear, eyeColor }) => {\n  return (\n    <>\n      <img className=\"details-image\"\n        alt={name}\n        width=\"400\"\n        height=\"550\"\n        src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} />\n\n      <div className=\"card-body\">\n        <h3 className=\"subtitle\">{name}</h3>\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td>Gender</td>\n              <td>{gender}</td>\n            </tr>\n            <tr>\n              <td>Birth Year</td>\n              <td>{birthYear}</td>\n            </tr>\n            <tr>\n              <td>Eye Color</td>\n              <td>{eyeColor}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n};\n\nexport default PersonDetails;","import React, { Component } from 'react';\n\nimport SwapiService from '../../Services/swapi-service';\n\nimport './RandomPlanet.css';\nimport Spinner from '../Spinner/Spinner';\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\n\nclass RandomPlanet extends Component {\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 10000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  onPlanetLoaded = (planet) => {\n    this.setState({ planet, loading: false });\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  }\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 18) + 2;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    const { planet, loading, error } = this.state;\n    const hasData = !(loading || error);\n    const spinner = loading ? <Spinner /> : null;\n    const errorMsg = error ? <ErrorIndicator /> : null;\n    const content = hasData ? <PlanetView {...planet} /> : null;\n    return (\n      <div className=\"random-planet jumbotron rounded d-flex\">\n        {spinner}\n        {errorMsg}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({ id, name, population, rotationPeriod, diameter }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n        <img className=\"image\"\n          alt={name}\n          width=\"400\"\n          height=\"400\"\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n      </div>\n      <div className=\"col mt-md-0 mt-3\">\n        <h2 className=\"subtitle\">{name}</h2>\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td>Population</td>\n              <td>{population}</td>\n            </tr>\n            <tr>\n              <td>Rotation Period</td>\n              <td>{rotationPeriod}</td>\n            </tr>\n            <tr>\n              <td>Diameter</td>\n              <td>{diameter}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default RandomPlanet;","import React, { Component } from 'react';\n\nimport Header from '../Header';\nimport ItemList from '../ItemList';\nimport PersonDetails from '../PersonDetails';\nimport RandomPlanet from '../RandomPlanet';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    selectedPerson: null\n  }\n\n  onPersonSelected = (id) => {\n    this.setState({\n      selectedPerson: id\n    })\n  }\n\n  render() {\n    const { selectedPerson } = this.state;\n    return (\n      <div className=\"container\">\n        <Header />\n        <RandomPlanet />\n        <div className=\"row mb2\">\n          <div className=\"col-md-6\">\n            <ItemList onItemSelected={this.onPersonSelected} />\n          </div>\n          <div className=\"col-md-6\">\n            <PersonDetails personId={selectedPerson} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}