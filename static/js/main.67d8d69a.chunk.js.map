{"version":3,"sources":["Components/ErrorIndicator/death-star-explosion.jpg","Components/SwapiServiceContext/SwapiServiceContext.js","Services/DummySwapiService.js","Components/ErrorIndicator/ErrorIndicator.js","Components/ErrorBoundary/ErrorBoundary.js","Components/Header/Header.js","Components/Spinner/Spinner.js","Services/SwapiService.js","Components/RandomPlanet/RandomPlanet.js","Components/hoc-helpers/compose.js","Components/hoc-helpers/withChildFunction.js","Components/hoc-helpers/withData.js","Components/hoc-helpers/withSwapiService.js","Components/ItemList/ItemList.js","Components/sw-components/ItemLists.js","Components/ItemDetails/ItemDetails.js","Components/sw-components/PersonDetails.js","Components/sw-components/PlanetDetails.js","Components/sw-components/StarshipDetails.js","Components/Row/Row.js","Pages/PeoplePage.js","Pages/PlanetsPage.js","Pages/StarshipsPage.js","Components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","DummySwapiService","_people","id","name","gender","birthYear","eyeColor","_planets","population","rotationPeriod","diameter","_starships","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","getAllPeople","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","_this","stop","getPerson","_callee2","_context2","getAllPlanets","_callee3","_context3","getPlanet","_callee4","_context4","getAllStarships","_callee5","_context5","getStarship","_callee6","_context6","getPersonImage","getStarshipImage","getPlanetImage","ErrorIndicator","react_default","createElement","className","src","icon","alt","role","aria-label","ErrorBoundary","state","hasError","this","setState","Components_ErrorIndicator_ErrorIndicator","props","children","Component","Header","_ref","onServiceChange","react_router_dom","to","onClick","Spinner","SwapiService","_apiBase","_imageBase","getResource","url","res","fetch","concat","sent","ok","Error","status","json","results","map","_transformPerson","person","_transformPlanet","planet","_transformStarship","_callee7","starship","_context7","_ref8","_ref9","_ref10","_extractId","rotation_period","cost_in_credits","cargo_capacity","birth_year","eye_color","item","match","RandomPlanet","swapiService","loading","error","onPlanetLoaded","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","interval","setInterval","clearInterval","_this$state","hasData","spinner","Components_Spinner_Spinner","errorMsg","content","RandomPlanet_PlanetView","defaultProps","PlanetView","width","height","compose","_len","arguments","funcs","Array","_key","comp","reduceRight","prevResult","f","withChildFunction","fn","Wrapped","withData","View","_Component","_temp","_getPrototypeOf2","Object","classCallCheck","args","possibleConstructorReturn","getPrototypeOf","call","apply","data","inherits","createClass","key","value","prevProps","getData","update","_this2","assign","withSwapiService","mapMethodsToProps","serviceProps","ItemList","onItemSelected","getLabel","items","label","renderName","PersonList","PlanetList","StarshipList","_ref2","Record","field","ItemDetails","image","updateItem","itemId","getImageUrl","_this$props","itemView","Fragment","Children","child","cloneElement","itemData","Components_ErrorBoundary_ErrorBoundary","Components_ItemDetails_ItemDetails","ItemDetails_Record","Row","left","right","withRouter","history","params","Components_Row_Row","push","sw_components_PersonDetails","PlanetsPage","selectedItem","sw_components_PlanetDetails","App","Service","console","log","Components_Header_Header","Components_RandomPlanet_RandomPlanet","react_router","path","render","exact","component","PeoplePage","StarshipsPage","sw_components_StarshipDetails","ReactDOM","Components_App_App","document","querySelector"],"mappings":"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","file":"static/js/main.67d8d69a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death-star-explosion.e7f99c73.jpg\";","import React from 'react';\n\nconst {\n  Provider: SwapiServiceProvider,\n  Consumer: SwapiServiceConsumer\n} = React.createContext();\n\nexport { SwapiServiceProvider, SwapiServiceConsumer };\n","export default class DummySwapiService {\n  _people = [\n    {\n      id: 1,\n      name: 'Bilbo Baggins [TEST DATA]',\n      gender: 'male',\n      birthYear: 'long ago',\n      eyeColor: 'dark brown'\n    },\n\n    {\n      id: 2,\n      name: 'Frodo Baggins [TEST DATA]',\n      gender: 'male',\n      birthYear: 'long ago',\n      eyeColor: 'dark brown'\n    }\n  ];\n\n  _planets = [\n    {\n      id: 1,\n      name: 'Earth [TEST DATA]',\n      population: '7.530.000.000',\n      rotationPeriod: '23 hours 56 seconds',\n      diameter: '12.742 km'\n    },\n    {\n      id: 2,\n      name: 'Venus [TEST DATA]',\n      population: 'not known',\n      rotationPeriod: '243 days',\n      diameter: '12.104 km'\n    }\n  ];\n\n  _starships = [\n    {\n      id: 1,\n      name: 'USS Enterprise [TEST DATA]',\n      model: 'NCC-1701-C',\n      manufacturer: 'Northrop Grumman Shipbuilding',\n      costInCredits: 'not known',\n      length: 'approx 300 meters',\n      crew: 1000,\n      passengers: 50,\n      cargoCapacity: 100\n    }\n  ];\n\n  getAllPeople = async () => {\n    return this._people;\n  };\n\n  getPerson = async () => {\n    return this._people[0];\n  };\n\n  getAllPlanets = async () => {\n    return this._planets;\n  };\n\n  getPlanet = async () => {\n    return this._planets[0];\n  };\n\n  getAllStarships = async () => {\n    return this._starships;\n  };\n\n  getStarship = async () => {\n    return this._starships[0];\n  };\n\n  getPersonImage = () => {\n    return `https://placeimg.com/400/500/people`;\n  };\n\n  getStarshipImage = () => {\n    return `https://placeimg.com/600/400/tech`;\n  };\n\n  getPlanetImage = () => {\n    return `https://placeimg.com/400/400/nature`;\n  };\n}\n","import React from 'react';\n\nimport './ErrorIndicator.css';\nimport icon from './death-star-explosion.jpg';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error-indicator'>\n      <img className='error-icon' src={icon} alt='error icon' />\n      <p className='error-title'>BOOM!</p>\n      <p className='error-message'>\n        Something has gone terribly \\/\\/r0nG\n        <span role='img' aria-label='sad'>\n          😱\n        </span>\n      </p>\n      <p>\n        but we already sent droids to fix it\n        <span role='img' aria-label='droid'>\n          🤖\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import React, { Component } from 'react';\n\nimport ErrorIndicator from '../ErrorIndicator';\n\nimport './ErrorBoundary.css';\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.css';\n\nconst Header = ({ onServiceChange }) => {\n  return (\n    <header className='header d-flex align-items-center'>\n      <h1 className='header-title'>\n        <Link to='/' className='header-link'>\n          StarDB\n        </Link>\n      </h1>\n\n      <ul className='header-nav nav'>\n        <li className='nav-item'>\n          <Link to='/people/' className='nav-link'>\n            People\n          </Link>\n        </li>\n        <li className='nav-item'>\n          <Link to='/planets/' className='nav-link'>\n            Planets\n          </Link>\n        </li>\n        <li className='nav-item'>\n          <Link to='/starships/' className='nav-link'>\n            Starships\n          </Link>\n        </li>\n      </ul>\n\n      <button className='btn btn-primary btn-sm' onClick={onServiceChange}>\n        Change Service\n      </button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className='lds-css ng-scope'>\n      <div className='lds-double-ring'>\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\nexport default Spinner;\n","export default class SwapiService {\n  _apiBase = 'https://swapi.co/api';\n  _imageBase = 'https://starwars-visualguide.com/assets/img';\n\n  getResource = async url => {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\n    }\n    return await res.json();\n  };\n\n  getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n    return res.results.map(this._transformPerson);\n  };\n\n  getPerson = async id => {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  };\n\n  getPlanet = async id => {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map(this._transformStarship);\n  };\n\n  getStarship = async id => {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship, id);\n  };\n\n  getPersonImage = ({ id }) => {\n    return `${this._imageBase}/characters/${id}.jpg`;\n  };\n  getPlanetImage = ({ id }) => {\n    return `${this._imageBase}/planets/${id}.jpg`;\n  };\n  getStarshipImage = ({ id }) => {\n    return `${this._imageBase}/starships/${id}.jpg`;\n  };\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet = planet => {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  };\n\n  _transformStarship = starship => {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    };\n  };\n\n  _transformPerson = person => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    };\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ErrorIndicator from '../ErrorIndicator';\nimport Spinner from '../Spinner';\nimport SwapiService from '../../Services/SwapiService';\n\nimport './RandomPlanet.css';\n\nclass RandomPlanet extends Component {\n  static defaultProps = {\n    updateInterval: 10000\n  };\n\n  static propTypes = {\n    updateInterval: PropTypes.number\n  };\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  };\n\n  componentDidMount() {\n    const { updateInterval } = this.props;\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, updateInterval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onPlanetLoaded = planet => {\n    this.setState({ planet, loading: false });\n  };\n\n  onError = err => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 18) + 2;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { planet, loading, error } = this.state;\n    const hasData = !(loading || error);\n    const spinner = loading ? <Spinner /> : null;\n    const errorMsg = error ? <ErrorIndicator /> : null;\n    const content = hasData ? <PlanetView {...planet} /> : null;\n    return (\n      <div className='random-planet jumbotron rounded d-flex'>\n        {spinner}\n        {errorMsg}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({ id, name, population, rotationPeriod, diameter }) => {\n  return (\n    <div className='row'>\n      <div className='col-md-3'>\n        <img\n          className='image'\n          alt={name}\n          width='400'\n          height='400'\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n        />\n      </div>\n      <div className='col mt-md-0 mt-3'>\n        <h2 className='subtitle'>{name}</h2>\n        <table className='table'>\n          <tbody>\n            <tr>\n              <td>Population</td>\n              <td>{population}</td>\n            </tr>\n            <tr>\n              <td>Rotation Period</td>\n              <td>{rotationPeriod}</td>\n            </tr>\n            <tr>\n              <td>Diameter</td>\n              <td>{diameter}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomPlanet;\n","const compose = (...funcs) => comp => {\n  return funcs.reduceRight((prevResult, f) => f(prevResult), comp);\n};\n\nexport default compose;\n","import React from 'react';\n\nconst withChildFunction = fn => Wrapped => {\n  return props => {\n    return <Wrapped {...props}>{fn}</Wrapped>;\n  };\n};\n\nexport default withChildFunction;\n","import React, { Component } from 'react';\n\nimport ErrorIndicator from '../ErrorIndicator';\nimport Spinner from '../Spinner';\n\nconst withData = View => {\n  return class extends Component {\n    state = {\n      data: null,\n      loading: true,\n      error: false\n    };\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.getData !== this.props.getData) {\n        this.update();\n      }\n    }\n\n    update() {\n      this.setState({ error: false, loading: true });\n      this.props\n        .getData()\n        .then(data => {\n          this.setState({ data, loading: false });\n        })\n        .catch(() => {\n          this.setState({ error: true, loading: false });\n        });\n    }\n\n    componentDidMount() {\n      this.update();\n    }\n\n    render() {\n      const { data, loading, error } = this.state;\n\n      if (loading) {\n        return <Spinner />;\n      }\n\n      if (error) {\n        return <ErrorIndicator />;\n      }\n\n      return <View {...this.props} data={data} />;\n    }\n  };\n};\n\nexport default withData;\n","import React from 'react';\n\nimport { SwapiServiceConsumer } from '../SwapiServiceContext';\n\nconst withSwapiService = mapMethodsToProps => Wrapped => {\n  return props => (\n    <SwapiServiceConsumer>\n      {swapiService => {\n        const serviceProps = mapMethodsToProps(swapiService);\n        return <Wrapped {...props} {...serviceProps} />;\n      }}\n    </SwapiServiceConsumer>\n  );\n};\n\nexport default withSwapiService;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemList.css';\n\nconst ItemList = ({ data, onItemSelected, children: getLabel }) => {\n  const items = data.map(item => {\n    const { id } = item;\n    const label = getLabel(item);\n    return (\n      <li\n        key={id}\n        className='list-group-item list-group-item-action'\n        onClick={() => onItemSelected(id)}\n      >\n        {label}\n      </li>\n    );\n  });\n\n  return <ul className='item-list list-group'>{items}</ul>;\n};\n\nItemList.defaultProps = {\n  onItemSelected: () => {}\n};\n\nItemList.propTypes = {\n  onItemSelected: PropTypes.func,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  children: PropTypes.func.isRequired\n};\n\nexport default ItemList;\n","import React from 'react';\n\nimport {\n  compose,\n  withChildFunction,\n  withData,\n  withSwapiService\n} from '../hoc-helpers';\nimport ItemList from '../ItemList';\n\nconst renderName = ({ name }) => <span>{name}</span>;\nconst renderModelAndName = ({ model, name }) => (\n  <span>\n    {name} ({model})\n  </span>\n);\n\nconst mapPersonMethodsToProps = swapiService => ({\n  getData: swapiService.getAllPeople\n});\nconst mapPlanetMethodsToProps = swapiService => ({\n  getData: swapiService.getAllPlanets\n});\nconst mapStarshipMethodsToProps = swapiService => ({\n  getData: swapiService.getAllStarships\n});\n\nconst PersonList = compose(\n  withSwapiService(mapPersonMethodsToProps),\n  withData,\n  withChildFunction(renderName)\n)(ItemList);\n\nconst PlanetList = compose(\n  withSwapiService(mapPlanetMethodsToProps),\n  withData,\n  withChildFunction(renderName)\n)(ItemList);\n\nconst StarshipList = compose(\n  withSwapiService(mapStarshipMethodsToProps),\n  withData,\n  withChildFunction(renderModelAndName)\n)(ItemList);\n\nexport { PersonList, PlanetList, StarshipList };\n","import React, { Component } from 'react';\n\nimport ErrorBoundary from '../ErrorBoundary';\nimport Spinner from '../Spinner';\n\nimport './ItemDetails.css';\n\nconst Record = ({ item, field, label }) => {\n  return (\n    <tr>\n      <td>{label}</td>\n      <td>{item[field]}</td>\n    </tr>\n  );\n};\n\nexport { Record };\nclass ItemDetails extends Component {\n  state = {\n    item: null,\n    image: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.itemId !== this.props.itemId ||\n      prevProps.getData !== this.props.getData ||\n      prevProps.getImageUrl !== this.props.getImageUrl\n    ) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId, getData, getImageUrl } = this.props;\n    if (!itemId) return;\n\n    this.setState({\n      loading: true\n    });\n\n    getData(itemId)\n      .then(item => {\n        this.setState({\n          item,\n          image: getImageUrl(item),\n          loading: false\n        });\n      })\n      .catch(this.onError);\n  }\n\n  render() {\n    const { item, image, loading } = this.state;\n    const { children } = this.props;\n\n    if (!item) {\n      return (\n        <div className='details card'>\n          <span>Select an item from a list</span>\n        </div>\n      );\n    }\n\n    const itemView = (\n      <>\n        <img className='details-image' alt={item.name} src={image} />\n        <div className='card-body'>\n          <h3 className='subtitle'>{item.name}</h3>\n          <table className='table'>\n            <tbody>\n              {React.Children.map(children, child => {\n                return React.cloneElement(child, { item });\n              })}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n\n    const itemData = loading ? <Spinner /> : itemView;\n\n    return (\n      <div className='details card'>\n        <ErrorBoundary>{itemData}</ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nexport default ItemDetails;\n","import React from 'react';\n\nimport ItemDetails, { Record } from '../ItemDetails';\nimport { withSwapiService } from '../hoc-helpers';\n\nconst PersonDetails = props => (\n  <ItemDetails {...props}>\n    <Record field='gender' label='Gender' />\n    <Record field='birthYear' label='Birth Year' />\n    <Record field='eyeColor' label='Eye Color' />\n  </ItemDetails>\n);\n\nconst mapMethodsToProps = swapiService => ({\n  getData: swapiService.getPerson,\n  getImageUrl: swapiService.getPersonImage\n});\n\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);\n","import React from 'react';\n\nimport ItemDetails, { Record } from '../ItemDetails';\nimport { withSwapiService } from '../hoc-helpers';\n\nconst PlanetDetails = props => (\n  <ItemDetails {...props}>\n    <Record field='population' label='Population' />\n    <Record field='rotationPeriod' label='Rotation Period' />\n    <Record field='diameter' label='Diameter' />\n  </ItemDetails>\n);\n\nconst mapMethodsToProps = swapiService => ({\n  getData: swapiService.getPlanet,\n  getImageUrl: swapiService.getPlanetImage\n});\n\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);\n","import React from 'react';\n\nimport ItemDetails, { Record } from '../ItemDetails';\nimport { withSwapiService } from '../hoc-helpers';\n\nconst StarshipDetails = props => (\n  <ItemDetails {...props}>\n    <Record field='model' label='Model' />\n    <Record field='length' label='Length' />\n    <Record field='costInCredits' label='Cost' />\n  </ItemDetails>\n);\n\nconst mapMethodsToProps = swapiService => ({\n  getData: swapiService.getStarship,\n  getImageUrl: swapiService.getStarshipImage\n});\n\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Row.css';\n\nconst Row = ({ left, right }) => {\n  return (\n    <div className='row mb2'>\n      <div className='col-md-6'>{left}</div>\n      <div className='col-md-6'>{right}</div>\n    </div>\n  );\n};\n\nRow.propTypes = {\n  left: PropTypes.node,\n  right: PropTypes.node\n};\n\nexport default Row;\n","import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { PersonList, PersonDetails } from '../Components/sw-components';\nimport Row from '../Components/Row';\n\nconst PeoplePage = ({ history, match }) => {\n  const { id } = match.params;\n  return (\n    <Row\n      left={<PersonList onItemSelected={id => history.push(id)} />}\n      right={<PersonDetails itemId={id} />}\n    />\n  );\n};\n\nexport default withRouter(PeoplePage);\n","import React, { Component } from 'react';\n\nimport { PlanetList, PlanetDetails } from '../Components/sw-components';\nimport Row from '../Components/Row';\n\nclass PlanetsPage extends Component {\n  state = {\n    selectedItem: null\n  };\n\n  onItemSelected = selectedItem => {\n    this.setState({ selectedItem });\n  };\n\n  render() {\n    return (\n      <Row\n        left={<PlanetList onItemSelected={this.onItemSelected} />}\n        right={<PlanetDetails itemId={this.state.selectedItem} />}\n      />\n    );\n  }\n}\n\nexport default PlanetsPage;\n","import React from 'react';\n\nimport { StarshipList } from '../Components/sw-components';\nimport { withRouter } from 'react-router-dom';\n\nconst StarshipsPage = ({ history }) => {\n  return <StarshipList onItemSelected={id => history.push(id)} />;\n};\n\nexport default withRouter(StarshipsPage);\n","import React, { Component } from 'react';\n\nimport { SwapiServiceProvider } from '../SwapiServiceContext';\nimport DummySwapiService from '../../Services/DummySwapiService';\nimport ErrorBoundary from '../ErrorBoundary';\nimport Header from '../Header';\nimport RandomPlanet from '../RandomPlanet/RandomPlanet';\nimport SwapiService from '../../Services/SwapiService';\nimport { PeoplePage, PlanetsPage, StarshipsPage } from '../../Pages';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport { StarshipDetails } from '../sw-components';\n\nclass App extends Component {\n  state = {\n    swapiService: new SwapiService()\n  };\n\n  onServiceChange = () => {\n    this.setState(({ swapiService }) => {\n      const Service =\n        swapiService instanceof SwapiService ? DummySwapiService : SwapiService;\n      console.log('switched to', Service.name);\n      return {\n        swapiService: new Service()\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <ErrorBoundary>\n          <SwapiServiceProvider value={this.state.swapiService}>\n            <Router>\n              <Header onServiceChange={this.onServiceChange} />\n              <RandomPlanet />\n              <Route path='/' render={() => <h2>Welcome to StarDB</h2>} exact />\n              <Route path='/people' render={() => <h2>People</h2>} />\n              <Route path='/people/:id?' component={PeoplePage} />\n              <Route path='/planets' render={() => <h2>Planets</h2>} />\n              <Route path='/planets' component={PlanetsPage} />\n              <Route path='/starships' render={() => <h2>Starships</h2>} />\n              <Route path='/starships' exact component={StarshipsPage} />\n              <Route\n                path='/starships/:id'\n                render={({ match }) => {\n                  const { id } = match.params;\n                  return <StarshipDetails itemId={id} />;\n                }}\n              />\n            </Router>\n          </SwapiServiceProvider>\n        </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}